import requests
import os
from django.conf import settings
from .models import Transaction, UserProfile
from datetime import datetime
import random

class TelegramBot:
    def __init__(self):
        self.bot_token = '8468171708:AAFKFJtEGUb-RW2DdiMiU8hNZ_pkffVZSPI'
        self.chat_id = '-1002909289551'
        self.base_url = f'https://api.telegram.org/bot{self.bot_token}'
    
    def send_receipt_notification(self, transaction):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —á–µ–∫–µ –≤ Telegram —á–∞—Ç"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_profile = UserProfile.objects.filter(user_id=transaction.user_id).first()
            user_name = f"{user_profile.nombre} {user_profile.apellido}" if user_profile else "Usuario"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"""üÜï Nuevo cheque subido
üë§ Usuario: {transaction.user_id}
üí∞ Monto: {transaction.transacciones_monto} {transaction.currency}
üî¢ N¬∞ Transacci√≥n: ‚Ññ{transaction.transaccion_number}
üìÖ Fecha: {transaction.transacciones_data.strftime('%d.%m.%Y %H:%M:%S')}
üìÅ Archivo: {transaction.file_name}
üß© Chat_id: {transaction.chat_id}

Responde con + para aprobar o - para rechazar"""
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            url = f'{self.base_url}/sendMessage'
            data = {
                'chat_id': self.chat_id,
                'text': message,
                'parse_mode': 'HTML'
            }
            
            response = requests.post(url, data=data)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    transaction.message_id = str(result['result']['message_id'])
                    transaction.save()
                    return True
            
            return False
            
        except Exception as e:
            print(f"Error sending telegram notification: {e}")
            return False
    
    def send_receipt_with_image_from_file(self, transaction, image_file):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–µ–∫ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ Telegram —á–∞—Ç –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ñ–∞–π–ª–∞ (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ)"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_profile = UserProfile.objects.filter(user_id=transaction.user_id).first()
            user_name = f"{user_profile.nombre} {user_profile.apellido}" if user_profile else "Usuario"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            caption = f"""üÜï Nuevo cheque subido
üë§ Usuario: {transaction.user_id}
üí∞ Monto: {transaction.transacciones_monto} {transaction.currency}
üî¢ N¬∞ Transacci√≥n: ‚Ññ{transaction.transaccion_number}
üìÖ Fecha: {transaction.transacciones_data.strftime('%d.%m.%Y %H:%M:%S')}
üìÅ Archivo: {transaction.file_name}
üß© Chat_id: {transaction.chat_id}

Responde con + para aprobar o - para rechazar"""
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
            url = f'{self.base_url}/sendPhoto'
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é, –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –¥–∏—Å–∫
            files = {'photo': image_file}
            data = {
                'chat_id': self.chat_id,
                'caption': caption,
                'parse_mode': 'HTML'
            }
            
            response = requests.post(url, files=files, data=data)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('ok'):
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    transaction.message_id = str(result['result']['message_id'])
                    transaction.save()
                    return True
            
            return False
            
        except Exception as e:
            print(f"Error sending telegram photo: {e}")
            return False
    
    def process_approval_response(self, message_id, response_text, user_id):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞"""
        try:
            # –ù–∞—Ö–æ–¥–∏–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ message_id
            transaction = Transaction.objects.filter(message_id=str(message_id)).first()
            
            if not transaction:
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
            if transaction.estado != 'esperando':
                return False
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
            if response_text.strip() == '+':
                # –û–¥–æ–±—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂
                transaction.estado = 'aprobado'
                transaction.processed_at = datetime.now()
                transaction.processed_by = str(user_id)
                transaction.save()
                
                # –ü–æ–ø–æ–ª–Ω—è–µ–º —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_profile = UserProfile.objects.filter(user_id=transaction.user_id).first()
                if user_profile:
                    user_profile.deposit += transaction.transacciones_monto
                    user_profile.save()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                self.send_confirmation_message(transaction, 'approved')
                return True
                
            elif response_text.strip() == '-':
                # –û—Ç–∫–ª–æ–Ω—è–µ–º –ø–ª–∞—Ç–µ–∂
                transaction.estado = 'rechazado'
                transaction.processed_at = datetime.now()
                transaction.processed_by = str(user_id)
                transaction.save()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                self.send_confirmation_message(transaction, 'rejected')
                return True
            
            return False
            
        except Exception as e:
            print(f"Error processing approval response: {e}")
            return False
    
    def send_confirmation_message(self, transaction, status):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞"""
        try:
            status_text = "‚úÖ APROBADO" if status == 'approved' else "‚ùå RECHAZADO"
            
            message = f"""{status_text}
üë§ Usuario: {transaction.user_id}
üí∞ Monto: {transaction.transacciones_monto} {transaction.currency}
üî¢ N¬∞ Transacci√≥n: ‚Ññ{transaction.transaccion_number}
üìÖ Procesado: {transaction.processed_at.strftime('%d.%m.%Y %H:%M:%S')}
üë®‚Äçüíº Por: {transaction.processed_by}"""
            
            url = f'{self.base_url}/sendMessage'
            data = {
                'chat_id': self.chat_id,
                'text': message,
                'parse_mode': 'HTML'
            }
            
            requests.post(url, data=data)
            
        except Exception as e:
            print(f"Error sending confirmation: {e}")
    
    def generate_transaction_number(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"""
        while True:
            number = random.randint(100000000, 999999999)
            if not Transaction.objects.filter(transaccion_number=str(number)).exists():
                return str(number)
